version: "3"

volumes:
      datasource:

networks:       
       backend:

services:
    clamav:
      image: clamav/clamav:latest
      container_name: Maroik.Clamav
      expose:
        - "3310"
      networks:
        - backend

    postgresql:
      image: postgres:17
      container_name: Maroik.PostgreSQL
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: ghksosmsrhdiddl12!@#
        POSTGRES_DB: Maroik
      volumes:
        - datasource:/var/lib/postgresql/data
        - ./Maroik.DB/PostgreSQL/SQL_Init_Script:/docker-entrypoint-initdb.d
      expose:
        - "5432"
      networks:
        - backend

    maroik.website:
        build :
         context : .
         dockerfile : Maroik.WebSite/Dockerfile
        container_name: Maroik.WebSite
        networks :
          - backend          
        ports:
          - "80:80"
          - "443:443"
        environment :
          - DBHOST=postgresql
          - ASPNETCORE_ENVIRONMENT=Production
          - ASPNETCORE_URLS=https://+:443;http://+:80
        volumes:
          - ./Maroik.SSL/conf:/etc/letsencrypt:ro
          - ./Maroik.Log/:/app/Maroik.Log:rw
        depends_on :
          - postgresql  

    maroik.webapi:
        build :
         context : .
         dockerfile : Maroik.WebAPI/Dockerfile
        container_name: Maroik.WebAPI
        networks :
          - backend          
        ports:
          - 5001:5001
        environment :
          - DBHOST=postgresql
          - ASPNETCORE_ENVIRONMENT=Production
          - ASPNETCORE_URLS=https://+:5001
        volumes:
          - ./Maroik.SSL/conf:/etc/letsencrypt:ro
        depends_on :
          - postgresql  

    maroik.filestorage:
        build :
         context : .
         dockerfile : Maroik.FileStorage/Dockerfile
        container_name: Maroik.FileStorage
        networks :
          - backend          
        expose:
          - "80"
          - "443"
        environment :
          - ASPNETCORE_ENVIRONMENT=Production
          - ASPNETCORE_URLS=https://+:443;http://+:80
        volumes:
          - ./Maroik.SSL/conf:/etc/letsencrypt:ro
          - ./Maroik.FileStorage/upload/:/app/upload:rw
          
    maroik.ai:
        build:
          context: .
          dockerfile: Maroik.AI/Dockerfile
        container_name: Maroik.AI
        networks:
          - backend
        expose:
          - "8000"
        environment:
          - DBPASSWORD=ghksosmsrhdiddl12!@#
        volumes:
          - ./Maroik.AI:/app/
        depends_on:
          - postgresql
        restart: always
        
    certbot:
        image: certbot/dns-cloudflare
        container_name: certbot
        volumes:
          - ./Maroik.SSL/conf:/etc/letsencrypt
          - ./Maroik.SSL/logs:/var/log/letsencrypt
          - ./Maroik.SSL/cloudflare.ini:/etc/letsencrypt/cloudflare.ini:ro
