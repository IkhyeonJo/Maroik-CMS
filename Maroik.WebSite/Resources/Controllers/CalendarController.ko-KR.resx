<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="The calendar already exists." xml:space="preserve">
    <value>이미 달력이 존재합니다.</value>
  </data>
  <data name="The calendar has been successfully created." xml:space="preserve">
    <value>달력이 성공적으로 생성되었습니다.</value>
  </data>
  <data name="Input is invalid" xml:space="preserve">
    <value>입력값이 유효하지 않습니다.</value>
  </data>
  <data name="Name length is must be between 1 and 100 characters." xml:space="preserve">
    <value>이름 길이는 1~100자 사이여야 합니다.</value>
  </data>
  <data name="Description length is must be between 0 and 16384 characters." xml:space="preserve">
    <value>내용 길이는 0~16,384자 사이여야 합니다.</value>
  </data>
  <data name="Only zip extension allowed." xml:space="preserve">
    <value>zip 확장자만 가능합니다.</value>
  </data>
  <data name="uploaded file size must be smaller than 10MB." xml:space="preserve">
    <value>업로드 파일 크기는 10MB 보다 작아야 합니다.</value>
  </data>
  <data name="The calendar does not exists." xml:space="preserve">
    <value>달력이 존재하지 않습니다.</value>
  </data>
  <data name="Please Login to create calendar event" xml:space="preserve">
    <value>달력 이벤트를 생성하려면 로그인하세요</value>
  </data>
  <data name="File size must be smaller than 10MB." xml:space="preserve">
    <value>파일 크기는 10MB 보다 작아야 합니다.</value>
  </data>
  <data name="The calendar event has been successfully created." xml:space="preserve">
    <value>달력 이벤트가 성공적으로 생성되었습니다.</value>
  </data>
  <data name="Please attach a file." xml:space="preserve">
    <value>파일을 첨부해주세요.</value>
  </data>
  <data name="Only .jpg or jpeg or .png file allowed." xml:space="preserve">
    <value>파일 확장자 jpg 또는 jpeg 또는 png 만 허용됩니다.</value>
  </data>
  <data name="No calendar exists" xml:space="preserve">
    <value>달력이 존재하지 않습니다</value>
  </data>
  <data name="The calendar has been successfully updated." xml:space="preserve">
    <value>달력이 성공적으로 수정되었습니다.</value>
  </data>
  <data name="Please Login to update calendar event" xml:space="preserve">
    <value>달력 이벤트를 수정하려면 로그인하세요</value>
  </data>
  <data name="The calendar event has been successfully updated." xml:space="preserve">
    <value>달력 이벤트가 성공적으로 수정되었습니다.</value>
  </data>
  <data name="The calendar has been successfully deleted." xml:space="preserve">
    <value>달력이 성공적으로 삭제되었습니다.</value>
  </data>
  <data name="The calendar event has been successfully deleted." xml:space="preserve">
    <value>달력 이벤트가 성공적으로 삭제되었습니다.</value>
  </data>
  <data name="The other calendar has been successfully updated." xml:space="preserve">
    <value>다른 달력이 성공적으로 수정되었습니다.</value>
  </data>
  <data name="Login required." xml:space="preserve">
    <value>로그인이 요구됩니다.</value>
  </data>
  <data name="The calendar shared has been successfully updated." xml:space="preserve">
    <value>공유 달력이 성공적으로 수정되었습니다.</value>
  </data>
</root>