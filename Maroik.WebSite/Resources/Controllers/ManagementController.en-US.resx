<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account create successfully done." xml:space="preserve">
    <value>Account create successfully done.</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="AgreedServiceTerms" xml:space="preserve">
    <value>AgreedServiceTerms</value>
  </data>
  <data name="AvatarImagePath" xml:space="preserve">
    <value>AvatarImagePath</value>
  </data>
  <data name="CategoryId" xml:space="preserve">
    <value>CategoryId</value>
  </data>
  <data name="Controller" xml:space="preserve">
    <value>Controller</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="Deleted" xml:space="preserve">
    <value>Deleted</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>DisplayName</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Email address is wrong" xml:space="preserve">
    <value>Email address is wrong</value>
  </data>
  <data name="EmailConfirmed" xml:space="preserve">
    <value>EmailConfirmed</value>
  </data>
  <data name="Fail to find the account by given email address" xml:space="preserve">
    <value>Fail to find the account by given email address</value>
  </data>
  <data name="File Size must be smaller than 10MB." xml:space="preserve">
    <value>File Size must be smaller than 10MB.</value>
  </data>
  <data name="Nickname" xml:space="preserve">
    <value>Nickname</value>
  </data>
  <data name="Nickname is must be between 1 and 255 characters" xml:space="preserve">
    <value>Nickname is must be between 1 and 255 characters</value>
  </data>
  <data name="HashedPassword" xml:space="preserve">
    <value>HashedPassword</value>
  </data>
  <data name="IconPath" xml:space="preserve">
    <value>IconPath</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="Input is invalid" xml:space="preserve">
    <value>Input is invalid</value>
  </data>
  <data name="Invalid email form" xml:space="preserve">
    <value>Invalid email form</value>
  </data>
  <data name="Invalid password. Please check again." xml:space="preserve">
    <value>Invalid password. Please check again.</value>
  </data>
  <data name="Locked" xml:space="preserve">
    <value>Locked</value>
  </data>
  <data name="LoginAttempt" xml:space="preserve">
    <value>LoginAttempt</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Only .jpg or jpeg or .png file allowed" xml:space="preserve">
    <value>Only .jpg or jpeg or .png file allowed</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="Password change successfully done." xml:space="preserve">
    <value>Password change successfully done.</value>
  </data>
  <data name="Password must be at least 8 characters and contain at 3 of 4 of the following: upper case (A-Z), lower case (a-z), number (0-9) and special character (e.g. !@#$%^&amp;*)" xml:space="preserve">
    <value>Password must be at least 8 characters and contain at 3 of 4 of the following: upper case (A-Z), lower case (a-z), number (0-9) and special character (e.g. !@#$%^&amp;*)</value>
  </data>
  <data name="Please attach a file" xml:space="preserve">
    <value>Please attach a file</value>
  </data>
  <data name="Please enter Nickname" xml:space="preserve">
    <value>Please enter Nickname</value>
  </data>
  <data name="RegistrationToken" xml:space="preserve">
    <value>RegistrationToken</value>
  </data>
  <data name="ResetPasswordToken" xml:space="preserve">
    <value>ResetPasswordToken</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="Role1" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="Successfully created the category" xml:space="preserve">
    <value>Successfully created the category</value>
  </data>
  <data name="Successfully created the subCategory" xml:space="preserve">
    <value>Successfully created the subCategory</value>
  </data>
  <data name="Successfully deleted the account" xml:space="preserve">
    <value>Successfully deleted the account</value>
  </data>
  <data name="Successfully deleted the category" xml:space="preserve">
    <value>Successfully deleted the category</value>
  </data>
  <data name="Successfully deleted the subCategory" xml:space="preserve">
    <value>Successfully deleted the subCategory</value>
  </data>
  <data name="Successfully updated the account" xml:space="preserve">
    <value>Successfully updated the account</value>
  </data>
  <data name="Successfully updated the category" xml:space="preserve">
    <value>Successfully updated the category</value>
  </data>
  <data name="Successfully updated the subCategory" xml:space="preserve">
    <value>Successfully updated the subCategory</value>
  </data>
  <data name="This account has already been created." xml:space="preserve">
    <value>This account has already been created.</value>
  </data>
  <data name="Updated" xml:space="preserve">
    <value>Updated</value>
  </data>
  <data name="Please select time zone" xml:space="preserve">
    <value>Please select time zone</value>
  </data>
  <data name="TimeZone" xml:space="preserve">
    <value>TimeZone</value>
  </data>
  <data name="TimeZoneIanaId" xml:space="preserve">
    <value>TimeZone</value>
  </data>
  <data name="content length is must be between 0 and 16384 characters." xml:space="preserve">
    <value>content length is must be between 0 and 16384 characters.</value>
  </data>
  <data name="No PrivateNoteBoard exists" xml:space="preserve">
    <value>No PrivateNoteBoard exists</value>
  </data>
  <data name="Only .jpg or jpeg or .png file allowed." xml:space="preserve">
    <value>Only .jpg or jpeg or .png file allowed.</value>
  </data>
  <data name="Only zip extension allowed." xml:space="preserve">
    <value>Only zip extension allowed.</value>
  </data>
  <data name="Please attach a file." xml:space="preserve">
    <value>Please attach a file.</value>
  </data>
  <data name="Please enter a comment." xml:space="preserve">
    <value>Please enter a comment.</value>
  </data>
  <data name="Please Login to edit board" xml:space="preserve">
    <value>Please Login to edit board</value>
  </data>
  <data name="Please Login to write board" xml:space="preserve">
    <value>Please Login to write board</value>
  </data>
  <data name="Please Login to write comment." xml:space="preserve">
    <value>Please Login to write comment.</value>
  </data>
  <data name="The board has been successfully created." xml:space="preserve">
    <value>The board has been successfully created.</value>
  </data>
  <data name="The board has been successfully deleted." xml:space="preserve">
    <value>The board has been successfully deleted.</value>
  </data>
  <data name="The board has been successfully updated." xml:space="preserve">
    <value>The board has been successfully updated.</value>
  </data>
  <data name="Title length is must be between 1 and 100 characters." xml:space="preserve">
    <value>Title length is must be between 1 and 100 characters.</value>
  </data>
  <data name="uploaded file size must be smaller than 10MB." xml:space="preserve">
    <value>uploaded file size must be smaller than 10MB.</value>
  </data>
  <data name="You do not have permission to delete." xml:space="preserve">
    <value>You do not have permission to delete.</value>
  </data>
</root>